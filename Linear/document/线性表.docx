##fileName:	线性表.doc	##
##author:	jonewan	##
##date：	2018/11/19	##

数据结构之线性表存储表示
满足线性结构定义的线性结构。
Linear
线性表中的每个节点是USER_TYPE类型（USER_TYPE类型由用户决定）
线性表中节点的最大个数（线性表空间），也应该由用户决定；
线性表节点的存储方式，使用物理线性结构（这不是绝对的！）（应注意方便用户的使用）
需要实现两个问题：
1、线性表数据（就诶点）的存储和使用
2、对线性表的”控制”;
控制部分由三项内容组成：
1、线性存储空间，用以存储线性表节点；
2、线性表的最大空间；（节点个数上限）；
3、当前线性表中有限节点个数。
typedef struct LINEAR{		//线性表的控制头
	USER_TYPE	*data;	//data用以指向线性存储空间
	int linearMaxRoom;	//线性表最大空间
	int count;			//线性表的有效元素个数
} LINEAR;












对于数据结构，应该提供哪些基本运算？
使用这个工具的程序元，会用到那些操作，这些操作中，基本的操作又是哪些？
增加数据；
删除数据；
修改数据；
查找数据。

注意：结构体类型不能直接比较
int (*funp)(); <==> int () *funp; <==> type *funp;(函数指针)


一元多项式的简单运算
一元多项式例如：
34.5x^15 + 6x^12 – 3.4x^4 + 5x -2.6
多项式的表达：
每一项表达成一个节点，且存储其系数和指数。
typedef struct POLYNOMIAL{
	double coefficient;//系数
	int power;//指数
} POLYNOMIAL;
typedef POLYNOMIAL USER_TYPE;

4.5x^6-6.7x^3+5.4

for(i = 0; i < 项数; i++){
	if(0 == i)
		处理系数输出方法；
	else
		处理系数输出方法；

	处理指数；
}

设用户输入两个多项式：p1和p2
求p1和p2的和的多项式
int a = 3, b = 4;
int c;

c = a+b; //a += b;

